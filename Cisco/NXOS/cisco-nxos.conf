###############################################################################
# Telegraf SNMP Configuration for Cisco NXOS Monitoring
# Comprehensive monitoring for CPU, Memory, Disk, Temperature, and Fan Status
# Compatible with Nexus 5000, 7000, and 9000 series switches
###############################################################################

[global_tags]
  environment = "production"
  platform = "cisco-nxos"

[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

###############################################################################
# CISCO NXOS SNMP INPUT CONFIGURATION
###############################################################################

[[inputs.snmp]]
  ## List of agents to poll
  agents = [
    "10.1.1.100",  # Replace with your NXOS switch IPs
    "10.1.1.101",
    # "10.1.1.102",
  ]
  
  ## Timeout for each SNMP query.
  timeout = "10s"
  ## Number of retries to attempt.
  retries = 3
  ## SNMP version; can be 1, 2, or 3.
  version = 3
  ## Security Name for SNMPv3
  sec_name = "telegraf_monitor"
  ## Authentication protocol; MD5, SHA, SHA224, SHA256, SHA384, SHA512
  auth_protocol = "SHA"
  ## Authentication password
  auth_password = "your_auth_password_here"
  ## Security level; noAuthNoPriv, authNoPriv, authPriv
  sec_level = "authPriv"
  ## Privacy protocol; DES, AES, AES192, AES192C, AES256, AES256C
  priv_protocol = "AES"
  ## Privacy password
  priv_password = "your_priv_password_here"
  ## Maximum number of repetitions to request for GETBULK
  max_repetitions = 50

  ###########################################################################
  # SYSTEM INFORMATION
  ###########################################################################
  
  ## System description, uptime, and basic info
  [[inputs.snmp.field]]
    name = "sysDescr"
    oid = "1.3.6.1.2.1.1.1.0"
    conversion = "string"
  
  [[inputs.snmp.field]]
    name = "sysUpTimeInstance"
    oid = "1.3.6.1.2.1.1.3.0"
    conversion = "float"
  
  [[inputs.snmp.field]]
    name = "sysName"
    oid = "1.3.6.1.2.1.1.5.0"
    conversion = "string"
  
  ###########################################################################
  # CPU UTILIZATION MONITORING
  # CISCO-PROCESS-MIB (1.3.6.1.4.1.9.9.109)
  ###########################################################################
  
  ## Primary CPU utilization metrics (most reliable for NXOS)
  [[inputs.snmp.field]]
    name = "cpu_5sec"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.6.1"
    conversion = "float"
  
  [[inputs.snmp.field]]
    name = "cpu_1min"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.7.1"
    conversion = "float"
  
  [[inputs.snmp.field]]
    name = "cpu_5min"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.8.1"
    conversion = "float"
  
  ## Alternative CPU utilization from CISCO-SYSTEM-EXT-MIB
  [[inputs.snmp.field]]
    name = "system_cpu_utilization"
    oid = "1.3.6.1.4.1.9.9.305.1.1.1.0"
    conversion = "float"
  
  ## Multi-CPU table for chassis with multiple processors
  [[inputs.snmp.table]]
    name = "cisco_cpu_table"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "cpu_physical_index"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.2"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cpu_5sec"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.6"
      conversion = "float"
    
    [[inputs.snmp.table.field]]
      name = "cpu_1min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.7"
      conversion = "float"
    
    [[inputs.snmp.table.field]]
      name = "cpu_5min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.8"
      conversion = "float"
  
  ###########################################################################
  # MEMORY UTILIZATION MONITORING
  # CISCO-PROCESS-MIB (1.3.6.1.4.1.9.9.109)
  ###########################################################################
  
  ## Basic memory utilization
  [[inputs.snmp.field]]
    name = "memory_used_bytes"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.12.1"
    conversion = "int"
  
  [[inputs.snmp.field]]
    name = "memory_free_bytes"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.13.1"
    conversion = "int"
  
  ## System memory utilization percentage
  [[inputs.snmp.field]]
    name = "system_memory_utilization"
    oid = "1.3.6.1.4.1.9.9.305.1.1.2.0"
    conversion = "float"
  
  ## Enhanced memory pool monitoring table
  [[inputs.snmp.table]]
    name = "cisco_memory_pool"
    oid = "1.3.6.1.4.1.9.9.221.1.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "pool_type"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.2"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "pool_name"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.3"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "pool_used_bytes"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.7"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "pool_free_bytes"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.8"
      conversion = "int"
    
    ## High-capacity counters for >4GB memory systems
    [[inputs.snmp.table.field]]
      name = "pool_hc_used_bytes"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.18"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "pool_hc_free_bytes"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.20"
      conversion = "int"
  
  ###########################################################################
  # DISK STORAGE MONITORING
  # HOST-RESOURCES-MIB (1.3.6.1.2.1.25)
  ###########################################################################
  
  ## Storage table for disk usage monitoring
  [[inputs.snmp.table]]
    name = "cisco_storage"
    oid = "1.3.6.1.2.1.25.2.3.1"
    
    [[inputs.snmp.table.field]]
      name = "storage_index"
      oid = "1.3.6.1.2.1.25.2.3.1.1"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "storage_type"
      oid = "1.3.6.1.2.1.25.2.3.1.2"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "storage_description"
      oid = "1.3.6.1.2.1.25.2.3.1.3"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "allocation_units"
      oid = "1.3.6.1.2.1.25.2.3.1.4"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "storage_size_units"
      oid = "1.3.6.1.2.1.25.2.3.1.5"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "storage_used_units"
      oid = "1.3.6.1.2.1.25.2.3.1.6"
      conversion = "int"
  
  ## UCD-SNMP-MIB disk monitoring (if available)
  [[inputs.snmp.table]]
    name = "cisco_disk_ucd"
    oid = "1.3.6.1.4.1.2021.9.1"
    
    [[inputs.snmp.table.field]]
      name = "disk_path"
      oid = "1.3.6.1.4.1.2021.9.1.2"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "disk_total_kb"
      oid = "1.3.6.1.4.1.2021.9.1.6"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "disk_avail_kb"
      oid = "1.3.6.1.4.1.2021.9.1.7"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "disk_used_kb"
      oid = "1.3.6.1.4.1.2021.9.1.8"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "disk_percent"
      oid = "1.3.6.1.4.1.2021.9.1.9"
      conversion = "float"
  
  ###########################################################################
  # TEMPERATURE SENSOR MONITORING
  # CISCO-ENTITY-SENSOR-MIB (1.3.6.1.4.1.9.9.91)
  ###########################################################################
  
  ## Temperature sensors table
  [[inputs.snmp.table]]
    name = "cisco_temperature"
    oid = "1.3.6.1.4.1.9.9.91.1.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "sensor_type"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.1"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "sensor_scale"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.2"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "sensor_precision"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.3"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "sensor_value"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.4"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "sensor_status"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.5"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "sensor_timestamp"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.6"
      conversion = "int"
  
  ## Entity physical names for temperature sensor correlation
  [[inputs.snmp.table]]
    name = "cisco_entity_names"
    oid = "1.3.6.1.2.1.47.1.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "entity_physical_descr"
      oid = "1.3.6.1.2.1.47.1.1.1.1.2"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "entity_physical_name"
      oid = "1.3.6.1.2.1.47.1.1.1.1.7"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "entity_physical_class"
      oid = "1.3.6.1.2.1.47.1.1.1.1.5"
      conversion = "int"
      is_tag = true
  
  ###########################################################################
  # FAN STATUS MONITORING
  # CISCO-ENTITY-FRU-CONTROL-MIB (1.3.6.1.4.1.9.9.117)
  ###########################################################################
  
  ## Fan tray status table
  [[inputs.snmp.table]]
    name = "cisco_fan_tray"
    oid = "1.3.6.1.4.1.9.9.117.1.4.1.1"
    
    [[inputs.snmp.table.field]]
      name = "fan_tray_oper_status"
      oid = "1.3.6.1.4.1.9.9.117.1.4.1.1.1"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "fan_speed_rpm"
      oid = "1.3.6.1.4.1.9.9.117.1.4.1.1.2"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "fan_speed_percent"
      oid = "1.3.6.1.4.1.9.9.117.1.4.1.1.3"
      conversion = "float"
  
  ## Power supply status monitoring
  [[inputs.snmp.table]]
    name = "cisco_power_supply"
    oid = "1.3.6.1.4.1.9.9.117.1.1.2.1"
    
    [[inputs.snmp.table.field]]
      name = "power_admin_status"
      oid = "1.3.6.1.4.1.9.9.117.1.1.2.1.1"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "power_oper_status"
      oid = "1.3.6.1.4.1.9.9.117.1.1.2.1.2"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "power_current_watts"
      oid = "1.3.6.1.4.1.9.9.117.1.1.2.1.3"
      conversion = "int"
  
  ###########################################################################
  # INTERFACE STATISTICS
  # Standard IF-MIB (1.3.6.1.2.1.2)
  ###########################################################################
  
  ## Interface table for network statistics
  [[inputs.snmp.table]]
    name = "cisco_interface"
    oid = "1.3.6.1.2.1.2.2.1"
    
    [[inputs.snmp.table.field]]
      name = "interface_name"
      oid = "1.3.6.1.2.1.2.2.1.2"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_type"
      oid = "1.3.6.1.2.1.2.2.1.3"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_speed"
      oid = "1.3.6.1.2.1.2.2.1.5"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "interface_admin_status"
      oid = "1.3.6.1.2.1.2.2.1.7"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_oper_status"
      oid = "1.3.6.1.2.1.2.2.1.8"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "in_octets"
      oid = "1.3.6.1.2.1.2.2.1.10"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "in_ucast_pkts"
      oid = "1.3.6.1.2.1.2.2.1.11"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "in_errors"
      oid = "1.3.6.1.2.1.2.2.1.14"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "in_discards"
      oid = "1.3.6.1.2.1.2.2.1.13"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "out_octets"
      oid = "1.3.6.1.2.1.2.2.1.16"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "out_ucast_pkts"
      oid = "1.3.6.1.2.1.2.2.1.17"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "out_errors"
      oid = "1.3.6.1.2.1.2.2.1.20"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "out_discards"
      oid = "1.3.6.1.2.1.2.2.1.19"
      conversion = "int"
  
  ## High-capacity interface counters (64-bit)
  [[inputs.snmp.table]]
    name = "cisco_interface_hc"
    oid = "1.3.6.1.2.1.31.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "interface_name"
      oid = "1.3.6.1.2.1.31.1.1.1.1"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "hc_in_octets"
      oid = "1.3.6.1.2.1.31.1.1.1.6"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_in_ucast_pkts"
      oid = "1.3.6.1.2.1.31.1.1.1.7"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_out_octets"
      oid = "1.3.6.1.2.1.31.1.1.1.10"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_out_ucast_pkts"
      oid = "1.3.6.1.2.1.31.1.1.1.11"
      conversion = "int"
  
  ###########################################################################
  # VDC MONITORING (for Nexus 7000 series)
  # CISCO-VDC-MIB (1.3.6.1.4.1.9.9.774)
  ###########################################################################
  
  ## Virtual Device Context table
  [[inputs.snmp.table]]
    name = "cisco_vdc"
    oid = "1.3.6.1.4.1.9.9.774.1.1.1.1"
    
    [[inputs.snmp.table.field]]
      name = "vdc_id"
      oid = "1.3.6.1.4.1.9.9.774.1.1.1.1.1"
      conversion = "int"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "vdc_name"
      oid = "1.3.6.1.4.1.9.9.774.1.1.1.1.2"
      conversion = "string"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "vdc_state"
      oid = "1.3.6.1.4.1.9.9.774.1.1.1.1.3"
      conversion = "int"
      is_tag = true

###############################################################################
# OUTPUT CONFIGURATION
###############################################################################

## InfluxDB v2 output
[[outputs.influxdb_v2]]
  urls = ["http://localhost:8086"]
  token = "your_influxdb_token"
  organization = "your_org"
  bucket = "cisco_nxos"
  
  ## Additional InfluxDB parameters
  timeout = "5s"
  user_agent = "telegraf"
  
  ## Data format
  content_encoding = "gzip"
  
  ## Field and tag transformations
  tagexclude = ["agent_host"]
  fieldpass = ["*"]

## Console output for debugging
# [[outputs.file]]
#   files = ["stdout", "/tmp/metrics.out"]
#   data_format = "influx"

###############################################################################
# PROCESSOR PLUGINS FOR DATA TRANSFORMATION
###############################################################################

## Convert temperature readings from millidegrees to Celsius
[[processors.converter]]
  namepass = ["cisco_temperature"]
  
  [processors.converter.fields]
    integer = ["sensor_value"]
  
  [[processors.converter.fields.integer]]
    dest = "temperature_celsius"
    scale = 0.001

## Calculate memory utilization percentage
[[processors.starlark]]
  namepass = ["cisco_memory_pool"]
  source = '''
def apply(metric):
    used = metric.fields.get("pool_used_bytes", 0)
    free = metric.fields.get("pool_free_bytes", 0)
    total = used + free
    if total > 0:
        metric.fields["memory_utilization_percent"] = (used / total) * 100
    return metric
'''

## Calculate disk utilization
[[processors.starlark]]
  namepass = ["cisco_storage"]
  source = '''
def apply(metric):
    size_units = metric.fields.get("storage_size_units", 0)
    used_units = metric.fields.get("storage_used_units", 0)
    alloc_units = metric.fields.get("allocation_units", 1)
    
    if size_units > 0:
        utilization = (used_units / size_units) * 100
        metric.fields["storage_utilization_percent"] = utilization
        metric.fields["storage_total_bytes"] = size_units * alloc_units
        metric.fields["storage_used_bytes"] = used_units * alloc_units
        metric.fields["storage_free_bytes"] = (size_units - used_units) * alloc_units
    return metric
'''

## Filter out non-temperature sensors from temperature table
[[processors.enum]]
  namepass = ["cisco_temperature"]
  
  [[processors.enum.mapping]]
    field = "sensor_type"
    dest = "sensor_type_name"
    
    [processors.enum.mapping.value_mappings]
      1 = "other"
      2 = "unknown" 
      3 = "voltsAC"
      4 = "voltsDC"
      5 = "amperes"
      6 = "watts"
      7 = "hertz"
      8 = "celsius"
      9 = "percentRH"
      10 = "rpm"
      11 = "cmm"
      12 = "truthvalue"
      13 = "specialEnum"
      14 = "dBm"

## Filter to only include temperature sensors (type 8)
[[processors.regex]]
  namepass = ["cisco_temperature"]
  
  [[processors.regex.tags]]
    key = "sensor_type"
    pattern = "^8$"
    replacement = "temperature"