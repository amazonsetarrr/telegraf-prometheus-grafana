# Telegraf Configuration for Cisco Router Monitoring
# Using MIBs: CISCO-PROCESS-MIB, CISCO-MEMORY-POOL-MIB, CISCO-ENVMON-MIB, 
# CISCO-IF-EXTENSION-MIB, CISCO-CDP-MIB, CISCO-SYSTEM-MIB, etc.

[global_tags]
  device_type = "cisco_router"
  
[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                  #
###############################################################################

[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2
  collectors_exclude = ["gocollector", "process"]
  string_as_label = true
  export_timestamp = true

###############################################################################
#                            PROCESSOR PLUGINS                               #
###############################################################################

# Add hostname and device info as tags
[[processors.regex]]
  [[processors.regex.tags]]
    key = "agent_host"
    pattern = "^(.*)$"
    replacement = "${1}"
    result_key = "router_hostname"

###############################################################################
#                            INPUT PLUGINS                                   #
###############################################################################

# System Information - CISCO-SYSTEM-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_system"
  timeout = "10s"
  retries = 3

  # System description and info
  [[inputs.snmp.field]]
    name = "sysDescr"
    oid = "1.3.6.1.2.1.1.1.0"
    is_tag = true
  
  [[inputs.snmp.field]]
    name = "sysUpTime"
    oid = "1.3.6.1.2.1.1.3.0"
  
  [[inputs.snmp.field]]
    name = "sysName"
    oid = "1.3.6.1.2.1.1.5.0"
    is_tag = true

# CPU Utilization - CISCO-PROCESS-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_cpu"
  timeout = "10s"
  retries = 3

  # CPU utilization percentages (1.3.6.1.4.1.9.9.109.1.1.1.1)
  [[inputs.snmp.table]]
    name = "cisco_cpu_util"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "cpu_5sec"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "cpu_1min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.4"
    
    [[inputs.snmp.table.field]]
      name = "cpu_5min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.5"
    
    [[inputs.snmp.table.field]]
      name = "cpu_index"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.2"
      is_tag = true

# Memory Utilization - CISCO-MEMORY-POOL-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_memory"
  timeout = "10s"
  retries = 3

  # Memory pool information (1.3.6.1.4.1.9.9.48.1.1.1)
  [[inputs.snmp.table]]
    name = "cisco_memory_pool"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "memory_pool_name"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "memory_used"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.5"
    
    [[inputs.snmp.table.field]]
      name = "memory_free"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.6"
    
    [[inputs.snmp.table.field]]
      name = "memory_largest_free"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.7"

# Enhanced Memory Pool - CISCO-ENHANCED-MEMPOOL-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_enhanced_memory"
  timeout = "10s"
  retries = 3

  # Enhanced memory utilization (1.3.6.1.4.1.9.9.221.1.1.1)
  [[inputs.snmp.table]]
    name = "cisco_enhanced_memory"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "memory_pool_name"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.3"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "memory_util_5sec"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.18"
    
    [[inputs.snmp.table.field]]
      name = "memory_util_1min"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.19"
    
    [[inputs.snmp.table.field]]
      name = "memory_util_5min"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.20"

# Environmental Monitoring - CISCO-ENVMON-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_environmental"
  timeout = "10s"
  retries = 3

  # Temperature sensors (1.3.6.1.4.1.9.9.13.1.3.1)
  [[inputs.snmp.table]]
    name = "cisco_temperature"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "temp_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "temp_value"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.3"
    
    [[inputs.snmp.table.field]]
      name = "temp_state"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.6"
    
    [[inputs.snmp.table.field]]
      name = "temp_threshold"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.4"

  # Power supply status (1.3.6.1.4.1.9.9.13.1.5.1)
  [[inputs.snmp.table]]
    name = "cisco_power_supply"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "power_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "power_state"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.3"
    
    [[inputs.snmp.table.field]]
      name = "power_source"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.4"

  # Fan status (1.3.6.1.4.1.9.9.13.1.4.1)
  [[inputs.snmp.table]]
    name = "cisco_fan"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "fan_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.4.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "fan_state"
      oid = "1.3.6.1.4.1.9.9.13.1.4.1.3"

# Interface Statistics - Standard IF-MIB + CISCO-IF-EXTENSION-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_interfaces"
  timeout = "10s"
  retries = 3

  # Standard interface statistics (1.3.6.1.2.1.2.2.1)
  [[inputs.snmp.table]]
    name = "cisco_interface"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "interface_name"
      oid = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_type"
      oid = "1.3.6.1.2.1.2.2.1.3"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_speed"
      oid = "1.3.6.1.2.1.2.2.1.5"
    
    [[inputs.snmp.table.field]]
      name = "interface_admin_status"
      oid = "1.3.6.1.2.1.2.2.1.7"
    
    [[inputs.snmp.table.field]]
      name = "interface_oper_status"
      oid = "1.3.6.1.2.1.2.2.1.8"
    
    [[inputs.snmp.table.field]]
      name = "bytes_in"
      oid = "1.3.6.1.2.1.2.2.1.10"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "bytes_out"
      oid = "1.3.6.1.2.1.2.2.1.16"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "packets_in"
      oid = "1.3.6.1.2.1.2.2.1.11"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "packets_out"
      oid = "1.3.6.1.2.1.2.2.1.17"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "errors_in"
      oid = "1.3.6.1.2.1.2.2.1.14"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "errors_out"
      oid = "1.3.6.1.2.1.2.2.1.20"
      conversion = "int"

# Cisco Discovery Protocol (CDP) - CISCO-CDP-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_cdp"
  timeout = "10s"
  retries = 3

  # CDP neighbor information (1.3.6.1.4.1.9.9.23.1.2.1)
  [[inputs.snmp.table]]
    name = "cisco_cdp_neighbors"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_device_id"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.6"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_address"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.4"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_platform"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.8"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_capabilities"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.9"
      is_tag = true

# Routing Table Size - IP-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_routing"
  timeout = "10s"
  retries = 3

  # IP routing table statistics
  [[inputs.snmp.field]]
    name = "ip_route_table_size"
    oid = "1.3.6.1.2.1.4.21.1.1"
    
# BGP Statistics (if BGP is enabled)
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_bgp"
  timeout = "10s"
  retries = 3

  # BGP peer information (1.3.6.1.2.1.15.3.1)
  [[inputs.snmp.table]]
    name = "cisco_bgp_peers"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_identifier"
      oid = "1.3.6.1.2.1.15.3.1.1"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_state"
      oid = "1.3.6.1.2.1.15.3.1.2"
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_admin_status"
      oid = "1.3.6.1.2.1.15.3.1.3"
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_negotiated_version"
      oid = "1.3.6.1.2.1.15.3.1.4"
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_local_addr"
      oid = "1.3.6.1.2.1.15.3.1.5"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "bgp_peer_remote_as"
      oid = "1.3.6.1.2.1.15.3.1.9"
      is_tag = true

# Entity Sensor Data - CISCO-ENTITY-SENSOR-MIB
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_entity_sensors"
  timeout = "10s"
  retries = 3

  # Entity sensor values (1.3.6.1.4.1.9.9.91.1.1.1)
  [[inputs.snmp.table]]
    name = "cisco_entity_sensors"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "sensor_type"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.1"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "sensor_scale"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "sensor_precision"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "sensor_value"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.4"
    
    [[inputs.snmp.table.field]]
      name = "sensor_status"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.5"

# Flash Memory Usage - CISCO-FLASH-MIB 
[[inputs.snmp]]
  agents = ["192.168.1.1:161"]
  version = 2
  community = "public"
  name = "cisco_router_flash"
  timeout = "10s"
  retries = 3

  # Flash partition info (1.3.6.1.4.1.9.9.10.1.1.4.1)
  [[inputs.snmp.table]]
    name = "cisco_flash_partition"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "flash_partition_name"
      oid = "1.3.6.1.4.1.9.9.10.1.1.4.1.10"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "flash_partition_size"
      oid = "1.3.6.1.4.1.9.9.10.1.1.4.1.2"
    
    [[inputs.snmp.table.field]]
      name = "flash_partition_free_space"
      oid = "1.3.6.1.4.1.9.9.10.1.1.4.1.3"
    
    [[inputs.snmp.table.field]]
      name = "flash_partition_file_count"
      oid = "1.3.6.1.4.1.9.9.10.1.1.4.1.4"

###############################################################################
#                     MEASUREMENT TRANSFORMATIONS                            #
###############################################################################

# Calculate memory utilization percentage
[[processors.starlark]]
  source = '''
def apply(metric):
    if metric.name == "cisco_memory_pool":
        if "memory_used" in metric.fields and "memory_free" in metric.fields:
            used = float(metric.fields.get("memory_used", 0))
            free = float(metric.fields.get("memory_free", 0))
            total = used + free
            if total > 0:
                metric.fields["memory_utilization_percent"] = (used / total) * 100
    
    if metric.name == "cisco_interface":
        # Calculate interface utilization if speed is available
        if "bytes_in" in metric.fields and "interface_speed" in metric.fields:
            speed = float(metric.fields.get("interface_speed", 0))
            if speed > 0:
                # Convert bytes to bits and calculate utilization
                bits_in = float(metric.fields.get("bytes_in", 0)) * 8
                metric.fields["interface_utilization_in_percent"] = (bits_in / speed) * 100
    
    return metric
'''

# Add device identification tags
[[processors.enum]]
  [[processors.enum.mapping]]
    tag = "temp_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning" 
      3 = "critical"
      4 = "shutdown"
      5 = "notPresent"
      6 = "notFunctioning"

  [[processors.enum.mapping]]
    tag = "power_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning"
      3 = "critical" 
      4 = "shutdown"
      5 = "notPresent"
      6 = "notFunctioning"

  [[processors.enum.mapping]]
    tag = "fan_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning"
      3 = "critical"
      4 = "shutdown" 
      5 = "notPresent"
      6 = "notFunctioning"