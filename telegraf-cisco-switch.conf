# Telegraf Configuration for Cisco Switch Monitoring
# Using MIBs: CISCO-PROCESS-MIB, CISCO-MEMORY-POOL-MIB, CISCO-ENVMON-MIB,
# CISCO-IF-EXTENSION-MIB, CISCO-CDP-MIB, CISCO-SYSTEM-MIB, CISCO-VLAN-MIB, etc.

[global_tags]
  device_type = "cisco_switch"
  
[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                  #
###############################################################################

[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2
  collectors_exclude = ["gocollector", "process"]
  string_as_label = true
  export_timestamp = true

###############################################################################
#                            PROCESSOR PLUGINS                               #
###############################################################################

# Add hostname and device info as tags
[[processors.regex]]
  [[processors.regex.tags]]
    key = "agent_host"
    pattern = "^(.*)$"
    replacement = "${1}"
    result_key = "switch_hostname"

###############################################################################
#                            INPUT PLUGINS                                   #
###############################################################################

# System Information - CISCO-SYSTEM-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_system"
  timeout = "10s"
  retries = 3

  # System description and info
  [[inputs.snmp.field]]
    name = "sysDescr"
    oid = "1.3.6.1.2.1.1.1.0"
    is_tag = true
  
  [[inputs.snmp.field]]
    name = "sysUpTime"
    oid = "1.3.6.1.2.1.1.3.0"
  
  [[inputs.snmp.field]]
    name = "sysName"
    oid = "1.3.6.1.2.1.1.5.0"
    is_tag = true

# CPU Utilization - CISCO-PROCESS-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_cpu"
  timeout = "10s"
  retries = 3

  # CPU utilization percentages
  [[inputs.snmp.table]]
    name = "cisco_cpu_util"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "cpu_5sec"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "cpu_1min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.4"
    
    [[inputs.snmp.table.field]]
      name = "cpu_5min"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.5"
    
    [[inputs.snmp.table.field]]
      name = "cpu_index"
      oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.2"
      is_tag = true

# Memory Utilization - CISCO-MEMORY-POOL-MIB & CISCO-ENHANCED-MEMPOOL-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_memory"
  timeout = "10s"
  retries = 3

  # Memory pool information
  [[inputs.snmp.table]]
    name = "cisco_memory_pool"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "memory_pool_name"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "memory_used"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.5"
    
    [[inputs.snmp.table.field]]
      name = "memory_free"
      oid = "1.3.6.1.4.1.9.9.48.1.1.1.6"

  # Enhanced memory utilization
  [[inputs.snmp.table]]
    name = "cisco_enhanced_memory"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "memory_pool_name"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.3"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "memory_util_5sec"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.18"
    
    [[inputs.snmp.table.field]]
      name = "memory_util_1min"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.19"
    
    [[inputs.snmp.table.field]]
      name = "memory_util_5min"
      oid = "1.3.6.1.4.1.9.9.221.1.1.1.1.20"

# Environmental Monitoring - CISCO-ENVMON-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_environmental"
  timeout = "10s"
  retries = 3

  # Temperature sensors
  [[inputs.snmp.table]]
    name = "cisco_temperature"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "temp_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "temp_value"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.3"
    
    [[inputs.snmp.table.field]]
      name = "temp_state"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.6"
    
    [[inputs.snmp.table.field]]
      name = "temp_threshold"
      oid = "1.3.6.1.4.1.9.9.13.1.3.1.4"

  # Power supply status
  [[inputs.snmp.table]]
    name = "cisco_power_supply"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "power_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "power_state"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.3"
    
    [[inputs.snmp.table.field]]
      name = "power_source"
      oid = "1.3.6.1.4.1.9.9.13.1.5.1.4"

  # Fan status
  [[inputs.snmp.table]]
    name = "cisco_fan"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "fan_desc"
      oid = "1.3.6.1.4.1.9.9.13.1.4.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "fan_state"
      oid = "1.3.6.1.4.1.9.9.13.1.4.1.3"

# Switch Port Statistics - IF-MIB + CISCO-IF-EXTENSION-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_interfaces"
  timeout = "15s"
  retries = 3

  # Standard interface statistics
  [[inputs.snmp.table]]
    name = "cisco_interface"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "interface_name"
      oid = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_alias"
      oid = "1.3.6.1.2.1.31.1.1.1.18"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_type"
      oid = "1.3.6.1.2.1.2.2.1.3"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "interface_speed"
      oid = "1.3.6.1.2.1.2.2.1.5"
    
    [[inputs.snmp.table.field]]
      name = "interface_high_speed"
      oid = "1.3.6.1.2.1.31.1.1.1.15"
    
    [[inputs.snmp.table.field]]
      name = "interface_admin_status"
      oid = "1.3.6.1.2.1.2.2.1.7"
    
    [[inputs.snmp.table.field]]
      name = "interface_oper_status"
      oid = "1.3.6.1.2.1.2.2.1.8"
    
    [[inputs.snmp.table.field]]
      name = "bytes_in"
      oid = "1.3.6.1.2.1.2.2.1.10"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "bytes_out"
      oid = "1.3.6.1.2.1.2.2.1.16"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "packets_in"
      oid = "1.3.6.1.2.1.2.2.1.11"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "packets_out"
      oid = "1.3.6.1.2.1.2.2.1.17"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "errors_in"
      oid = "1.3.6.1.2.1.2.2.1.14"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "errors_out"
      oid = "1.3.6.1.2.1.2.2.1.20"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "discards_in"
      oid = "1.3.6.1.2.1.2.2.1.13"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "discards_out"
      oid = "1.3.6.1.2.1.2.2.1.19"
      conversion = "int"

# High Capacity Interface Statistics
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_hc_interfaces"
  timeout = "15s"
  retries = 3

  # High capacity counters for 64-bit statistics
  [[inputs.snmp.table]]
    name = "cisco_interface_hc"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "interface_name"
      oid = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "hc_bytes_in"
      oid = "1.3.6.1.2.1.31.1.1.1.6"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_bytes_out"
      oid = "1.3.6.1.2.1.31.1.1.1.10"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_unicast_packets_in"
      oid = "1.3.6.1.2.1.31.1.1.1.7"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "hc_unicast_packets_out"
      oid = "1.3.6.1.2.1.31.1.1.1.11"
      conversion = "int"

# VLAN Information - CISCO-VLAN-MEMBERSHIP-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_vlans"
  timeout = "10s"
  retries = 3

  # VLAN membership
  [[inputs.snmp.table]]
    name = "cisco_vlan_membership"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "vlan_index"
      oid = "1.3.6.1.4.1.9.9.68.1.2.2.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "vlan_type"
      oid = "1.3.6.1.4.1.9.9.68.1.2.2.1.3"

# Spanning Tree Protocol - CISCO-STP-EXTENSIONS-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_stp"
  timeout = "10s"
  retries = 3

  # STP Root bridge info
  [[inputs.snmp.field]]
    name = "stp_root_cost"
    oid = "1.3.6.1.2.1.17.2.6.0"
  
  [[inputs.snmp.field]]
    name = "stp_root_port"
    oid = "1.3.6.1.2.1.17.2.7.0"
  
  [[inputs.snmp.field]]
    name = "stp_topology_changes"
    oid = "1.3.6.1.2.1.17.2.4.0"
    conversion = "int"

  # STP port states
  [[inputs.snmp.table]]
    name = "cisco_stp_ports"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "stp_port_state"
      oid = "1.3.6.1.2.1.17.2.15.1.3"
    
    [[inputs.snmp.table.field]]
      name = "stp_port_enable"
      oid = "1.3.6.1.2.1.17.2.15.1.4"
    
    [[inputs.snmp.table.field]]
      name = "stp_port_path_cost"
      oid = "1.3.6.1.2.1.17.2.15.1.5"

# Cisco Discovery Protocol (CDP) - CISCO-CDP-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_cdp"
  timeout = "10s"
  retries = 3

  # CDP neighbor information
  [[inputs.snmp.table]]
    name = "cisco_cdp_neighbors"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_device_id"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.6"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_address"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.4"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_platform"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.8"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_neighbor_capabilities"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.9"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "cdp_local_interface"
      oid = "1.3.6.1.4.1.9.9.23.1.2.1.1.1"
      is_tag = true

# MAC Address Table - BRIDGE-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_mac_table"
  timeout = "10s"
  retries = 3

  # MAC address table size
  [[inputs.snmp.field]]
    name = "mac_table_size"
    oid = "1.3.6.1.2.1.17.4.3.1.1"
    
  [[inputs.snmp.field]]
    name = "mac_table_aging_time"
    oid = "1.3.6.1.2.1.17.4.2.0"

# PoE (Power over Ethernet) - CISCO-POWER-ETHERNET-EXT-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_poe"
  timeout = "10s"
  retries = 3

  # PoE port information
  [[inputs.snmp.table]]
    name = "cisco_poe_ports"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "poe_port_admin_enable"
      oid = "1.3.6.1.2.1.105.1.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_power_pairs_control_ability"
      oid = "1.3.6.1.2.1.105.1.1.1.4"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_power_pairs"
      oid = "1.3.6.1.2.1.105.1.1.1.5"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_detection_status"
      oid = "1.3.6.1.2.1.105.1.1.1.6"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_power_priority"
      oid = "1.3.6.1.2.1.105.1.1.1.7"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_mps_absent_counter"
      oid = "1.3.6.1.2.1.105.1.1.1.8"
      conversion = "int"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_type"
      oid = "1.3.6.1.2.1.105.1.1.1.9"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "poe_port_power_allocated"
      oid = "1.3.6.1.2.1.105.1.1.1.10"
    
    [[inputs.snmp.table.field]]
      name = "poe_port_power_drawn"
      oid = "1.3.6.1.2.1.105.1.1.1.11"

# Entity Sensor Data - CISCO-ENTITY-SENSOR-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_entity_sensors"
  timeout = "10s"
  retries = 3

  # Entity sensor values
  [[inputs.snmp.table]]
    name = "cisco_entity_sensors"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "sensor_type"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.1"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "sensor_scale"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.2"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "sensor_precision"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "sensor_value"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.4"
    
    [[inputs.snmp.table.field]]
      name = "sensor_status"
      oid = "1.3.6.1.4.1.9.9.91.1.1.1.1.5"

# Stack Information (for stackable switches) - CISCO-STACKWISE-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_stack"
  timeout = "10s"
  retries = 3

  # Stack member information
  [[inputs.snmp.table]]
    name = "cisco_stack_members"
    inherit_tags = ["agent_host"]
    
    [[inputs.snmp.table.field]]
      name = "stack_member_number"
      oid = "1.3.6.1.4.1.9.9.500.1.2.1.1.1"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "stack_member_priority"
      oid = "1.3.6.1.4.1.9.9.500.1.2.1.1.3"
    
    [[inputs.snmp.table.field]]
      name = "stack_member_role"
      oid = "1.3.6.1.4.1.9.9.500.1.2.1.1.4"
      is_tag = true
    
    [[inputs.snmp.table.field]]
      name = "stack_member_mac_address"
      oid = "1.3.6.1.4.1.9.9.500.1.2.1.1.5"
      is_tag = true

# Software Image Information - CISCO-IMAGE-MIB
[[inputs.snmp]]
  agents = ["192.168.1.2:161"]
  version = 2
  community = "public"
  name = "cisco_switch_image"
  timeout = "10s"
  retries = 3

  # Software image information
  [[inputs.snmp.field]]
    name = "image_string"
    oid = "1.3.6.1.4.1.9.9.25.1.1.1.2.2"
    is_tag = true

###############################################################################
#                     MEASUREMENT TRANSFORMATIONS                            #
###############################################################################

# Calculate memory utilization percentage
[[processors.starlark]]
  source = '''
def apply(metric):
    if metric.name == "cisco_memory_pool":
        if "memory_used" in metric.fields and "memory_free" in metric.fields:
            used = float(metric.fields.get("memory_used", 0))
            free = float(metric.fields.get("memory_free", 0))
            total = used + free
            if total > 0:
                metric.fields["memory_utilization_percent"] = (used / total) * 100
    
    if metric.name == "cisco_interface" or metric.name == "cisco_interface_hc":
        # Calculate interface utilization if speed is available
        if "interface_high_speed" in metric.fields:
            speed = float(metric.fields.get("interface_high_speed", 0)) * 1000000  # Convert from Mbps to bps
        elif "interface_speed" in metric.fields:
            speed = float(metric.fields.get("interface_speed", 0))
        else:
            speed = 0
            
        if speed > 0:
            # Use HC counters if available, otherwise standard counters
            if "hc_bytes_in" in metric.fields:
                bits_in = float(metric.fields.get("hc_bytes_in", 0)) * 8
                bits_out = float(metric.fields.get("hc_bytes_out", 0)) * 8
            else:
                bits_in = float(metric.fields.get("bytes_in", 0)) * 8
                bits_out = float(metric.fields.get("bytes_out", 0)) * 8
            
            metric.fields["interface_utilization_in_percent"] = (bits_in / speed) * 100
            metric.fields["interface_utilization_out_percent"] = (bits_out / speed) * 100
    
    if metric.name == "cisco_poe_ports":
        # Calculate PoE utilization percentage
        if "poe_port_power_allocated" in metric.fields and "poe_port_power_drawn" in metric.fields:
            allocated = float(metric.fields.get("poe_port_power_allocated", 0))
            drawn = float(metric.fields.get("poe_port_power_drawn", 0))
            if allocated > 0:
                metric.fields["poe_utilization_percent"] = (drawn / allocated) * 100
    
    return metric
'''

# Add device identification tags and enum mappings
[[processors.enum]]
  [[processors.enum.mapping]]
    tag = "temp_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning" 
      3 = "critical"
      4 = "shutdown"
      5 = "notPresent"
      6 = "notFunctioning"

  [[processors.enum.mapping]]
    tag = "power_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning"
      3 = "critical" 
      4 = "shutdown"
      5 = "notPresent"
      6 = "notFunctioning"

  [[processors.enum.mapping]]
    tag = "fan_state"
    [processors.enum.mapping.value_mappings]
      1 = "normal"
      2 = "warning"
      3 = "critical"
      4 = "shutdown" 
      5 = "notPresent"
      6 = "notFunctioning"

  [[processors.enum.mapping]]
    tag = "interface_admin_status"
    [processors.enum.mapping.value_mappings]
      1 = "up"
      2 = "down"
      3 = "testing"

  [[processors.enum.mapping]]
    tag = "interface_oper_status"
    [processors.enum.mapping.value_mappings]
      1 = "up"
      2 = "down"
      3 = "testing"
      4 = "unknown"
      5 = "dormant"
      6 = "notPresent"
      7 = "lowerLayerDown"

  [[processors.enum.mapping]]
    tag = "stp_port_state"
    [processors.enum.mapping.value_mappings]
      1 = "disabled"
      2 = "blocking"
      3 = "listening"
      4 = "learning"
      5 = "forwarding"
      6 = "broken"

  [[processors.enum.mapping]]
    tag = "poe_port_detection_status"
    [processors.enum.mapping.value_mappings]
      1 = "disabled"
      2 = "searching"
      3 = "deliveringPower"
      4 = "fault"
      5 = "test"
      6 = "otherFault"

  [[processors.enum.mapping]]
    tag = "stack_member_role"
    [processors.enum.mapping.value_mappings]
      1 = "master"
      2 = "member"
      3 = "notMember"
      4 = "standby"